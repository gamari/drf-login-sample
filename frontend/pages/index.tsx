import Head from "next/head";
import { Inter } from "@next/font/google";
import { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [isLoggined, setIsLoggined] = useState(false);

  const handleFree = async () => {
    const ret = await fetch("http://127.0.0.1:8000/api/allow/", {
      method: "GET",
    });

    if (ret.status != 200) {
      alert("エラー");
      return;
    }

    const json = await ret.json();

    alert(json.message);
  };

  const handleLogin = async () => {
    const ret = await fetch("http://127.0.0.1:8000/api/login/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        username,
        password,
      }),
    });

    if (ret.status != 200) {
      alert("エラー");
      return;
    }

    const json = await ret.json();
    localStorage.setItem("token", json.token);
    setIsLoggined(true);
  };

  const handleRequired = async () => {
    const token = localStorage.getItem("token");

    const ret = await fetch("http://127.0.0.1:8000/api/permission/", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Token ${token}`,
      },
    });

    if (ret.status != 200) {
      alert("エラー");
      return;
    }

    const json = await ret.json();
    alert(json.message);
  };

  const handleLogout = () => {
    localStorage.setItem("token", "");
  };

  return (
    <>
      <Head>
        <title>サンプル</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col space-y-6 items-center py-20">
        <div className="border shadow p-4 w-[300px] flex flex-col space-y-3">
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            className="border p-2"
            placeholder="username"
          />
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="border p-2"
            placeholder="password"
          />

          <button className="bg-blue-500 text-white p-2" onClick={handleLogin}>
            ログイン
          </button>

          <button onClick={handleLogout} className="bg-red-500 text-white p-2">
            ログアウト
          </button>
        </div>

        <div>
          {isLoggined ? (
            <div className="text-blue-500 text-xl">ログイン済み</div>
          ) : (
            <div>未ログイン</div>
          )}
        </div>

        <div className="flex flex-row space-x-3">
          <button className="bg-green-500 text-white p-2" onClick={handleFree}>
            フリーボタン
          </button>
          <button
            onClick={handleRequired}
            className="bg-orange-500 text-white p-2"
          >
            ログイン必須ボタン
          </button>
        </div>
      </main>
    </>
  );
}
